# Team Collaboration Configuration for ADS599 Capstone Soccer Intelligence System

# Team Member Roles and Access Levels
team_roles:
  analyst:
    description: "Data analyst with read-only access to data and visualization tools"
    access_level: "read_only"
    services:
      - postgres
      - redis
      - jupyter
      - streamlit
    permissions:
      database: "read"
      data_files: "read"
      notebooks: "read_write"
      reports: "read_write"
    docker_profile: "analyst"
    
  developer:
    description: "Full-stack developer with complete system access"
    access_level: "full"
    services:
      - postgres
      - redis
      - jupyter
      - streamlit
      - pgadmin
      - redis-commander
    permissions:
      database: "read_write"
      data_files: "read_write"
      notebooks: "read_write"
      reports: "read_write"
      source_code: "read_write"
      docker: "read_write"
    docker_profile: "development"
    
  researcher:
    description: "Academic researcher with analysis tools and documentation access"
    access_level: "research"
    services:
      - postgres
      - jupyter
    permissions:
      database: "read"
      data_files: "read"
      notebooks: "read_write"
      reports: "read_write"
      documentation: "read_write"
    docker_profile: "research"

# Team Collaboration Settings
collaboration:
  shared_resources:
    database:
      host: "postgres"
      port: 5432
      database: "soccer_intelligence"
      max_connections: 20
      
    cache:
      host: "redis"
      port: 6379
      max_memory: "1GB"
      
    jupyter:
      shared_notebooks: true
      auto_save: true
      kernel_timeout: 3600  # 1 hour
      
  git_workflow:
    main_branch: "main"
    feature_branch_prefix: "feature/"
    require_pull_requests: true
    require_code_review: true
    auto_delete_merged_branches: true
    
  communication:
    issue_tracking: "github_issues"
    documentation: "markdown"
    code_review: "github_pr"
    
# Development Environment Profiles
development_profiles:
  analyst:
    description: "Analyst environment with visualization tools"
    services:
      - postgres
      - redis
      - jupyter
      - streamlit
    ports:
      jupyter: 8888
      streamlit: 8501
    volumes:
      data: "read_only"
      notebooks: "read_write"
      
  developer:
    description: "Full development environment"
    services:
      - postgres
      - redis
      - jupyter
      - streamlit
      - pgadmin
      - redis-commander
    ports:
      jupyter: 8889
      streamlit: 8502
      pgadmin: 8080
      redis_commander: 8081
    volumes:
      project: "read_write"
      docker_socket: true
      
  research:
    description: "Research environment with academic tools"
    services:
      - postgres
      - jupyter
    ports:
      jupyter: 8890
    volumes:
      data: "read_only"
      notebooks: "read_write"
      documentation: "read_write"

# Shared Data Access Configuration
data_access:
  database_connections:
    analyst:
      user: "analyst_user"
      password: "analyst_pass"
      privileges: ["SELECT"]
      
    developer:
      user: "soccerapp"
      password: "soccerpass123"
      privileges: ["ALL"]
      
    researcher:
      user: "research_user"
      password: "research_pass"
      privileges: ["SELECT"]
      
  file_permissions:
    data_directory:
      analysts: "read"
      developers: "read_write"
      researchers: "read"
      
    notebooks_directory:
      analysts: "read_write"
      developers: "read_write"
      researchers: "read_write"
      
    source_code:
      analysts: "none"
      developers: "read_write"
      researchers: "read"

# Team Onboarding Configuration
onboarding:
  required_software:
    - name: "Git"
      version: "latest"
      required: true
      
    - name: "Docker Desktop"
      version: "latest"
      required: true
      
    - name: "Python"
      version: "3.11+"
      required: false
      
    - name: "VS Code"
      version: "latest"
      required: false
      
  setup_steps:
    1: "Clone repository"
    2: "Run team setup script"
    3: "Configure API keys"
    4: "Start Docker services"
    5: "Verify setup"
    6: "Join team communication channels"
    
  verification_checklist:
    - "Docker services running"
    - "Database connection working"
    - "Jupyter accessible"
    - "API keys configured"
    - "Git configuration set"
    - "Team communication access"

# Security and Best Practices
security:
  api_keys:
    storage: "config/api_keys.yaml"
    version_control: "excluded"
    sharing: "individual_responsibility"
    
  database:
    backup_frequency: "daily"
    backup_retention: "30_days"
    access_logging: true
    
  code_review:
    required_reviewers: 1
    automated_checks: true
    security_scan: true
    
# Monitoring and Maintenance
monitoring:
  health_checks:
    database: "pg_isready"
    cache: "redis-cli ping"
    services: "docker ps"
    
  performance_metrics:
    cpu_usage: true
    memory_usage: true
    disk_usage: true
    network_usage: true
    
  log_management:
    retention_period: "30_days"
    log_level: "INFO"
    centralized_logging: false

# Team Communication
communication:
  channels:
    general: "Team announcements and general discussion"
    technical: "Technical questions and code review"
    data: "Data-related discussions and findings"
    research: "Academic research and methodology"
    
  meeting_schedule:
    standup: "Daily at 9:00 AM"
    sprint_planning: "Mondays at 2:00 PM"
    retrospective: "Fridays at 4:00 PM"
    
  documentation_standards:
    code_comments: "Required for complex functions"
    commit_messages: "Conventional commits format"
    pull_requests: "Detailed description and testing notes"
    api_documentation: "OpenAPI/Swagger format"

# Project Management
project_management:
  task_tracking: "github_projects"
  sprint_duration: "2_weeks"
  estimation_method: "story_points"
  
  workflow_states:
    - "Backlog"
    - "In Progress"
    - "Code Review"
    - "Testing"
    - "Done"
    
  definition_of_done:
    - "Code written and tested"
    - "Documentation updated"
    - "Code reviewed and approved"
    - "Integration tests passing"
    - "Deployed to staging"
