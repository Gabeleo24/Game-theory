# Docker Compose Configuration for Real Madrid 2023-2024 Match Analysis System
# Comprehensive containerized setup for match-level player statistics analysis

version: '3.8'

services:
  # ============================================================================
  # Enhanced PostgreSQL Database Service with SportMonks Schema
  # ============================================================================
  postgres:
    image: postgres:15-alpine
    container_name: real_madrid_analysis_db
    environment:
      POSTGRES_DB: soccer_intelligence
      POSTGRES_USER: soccerapp
      POSTGRES_PASSWORD: soccerpass123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
      # Performance tuning
      POSTGRES_SHARED_BUFFERS: "512MB"
      POSTGRES_WORK_MEM: "16MB"
      POSTGRES_MAINTENANCE_WORK_MEM: "128MB"
      POSTGRES_MAX_CONNECTIONS: "200"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
      - ./database/backups:/backups
      - postgres_logs:/var/log/postgresql
    networks:
      - real_madrid_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U soccerapp -d soccer_intelligence"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres
      -c shared_buffers=512MB
      -c work_mem=16MB
      -c maintenance_work_mem=128MB
      -c max_connections=200
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c random_page_cost=1.1
      -c effective_cache_size=1536MB
      -c log_min_duration_statement=1000
      -c log_lock_waits=on

  # ============================================================================
  # Real Madrid Match Analysis Application
  # ============================================================================
  real_madrid_app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: real_madrid_analysis_app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=soccer_intelligence
      - POSTGRES_USER=soccerapp
      - POSTGRES_PASSWORD=soccerpass123
      - PYTHONPATH=/app
      - SPORTMONKS_API_KEY=TmPuKHKnA7OJdHxp8zGzF5oevN0mgyqOOOaqgWMOr7KrhpaZeg9xB2ajoq2p
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
      - ./scripts:/app/scripts
      - match_reports:/app/logs/match_analysis
    networks:
      - real_madrid_network
    restart: unless-stopped
    command: tail -f /dev/null

  # ============================================================================
  # Match Analysis Web Interface
  # ============================================================================
  match_analyzer_web:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: real_madrid_web_interface
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=soccer_intelligence
      - POSTGRES_USER=soccerapp
      - POSTGRES_PASSWORD=soccerpass123
    ports:
      - "8080:8080"  # Web Interface
    volumes:
      - ./logs/match_analysis:/app/reports
      - ./config:/app/config
    networks:
      - real_madrid_network
    restart: unless-stopped

  # ============================================================================
  # Development Environment with Jupyter
  # ============================================================================
  real_madrid_dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: real_madrid_analysis_dev
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=soccer_intelligence
      - POSTGRES_USER=soccerapp
      - POSTGRES_PASSWORD=soccerpass123
      - PYTHONPATH=/app
      - SPORTMONKS_API_KEY=06mGTPq3nbsrRUFBGz8jzMjj66wB4s4iotmm5bB04DNwiRvZby4gcJwZRYiX
    ports:
      - "8888:8888"  # Jupyter
      - "8501:8501"  # Streamlit
      - "8000:8000"  # Analysis API
    volumes:
      - ./:/app
      - jupyter_data:/home/soccerapp/.jupyter
    networks:
      - real_madrid_network
    restart: unless-stopped
    command: >
      bash -c "
        jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password=''
      "

  # ============================================================================
  # SportMonks API Data Collector Service
  # ============================================================================
  sportmonks_collector:
    build:
      context: ./services/sportmonks_collector
      dockerfile: Dockerfile
    container_name: real_madrid_sportmonks_collector
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=soccer_intelligence
      - POSTGRES_USER=soccerapp
      - POSTGRES_PASSWORD=soccerpass123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redispass123
      - SPORTMONKS_API_KEY=TmPuKHKnA7OJdHxp8zGzF5oevN0mgyqOOOaqgWMOr7KrhpaZeg9xB2ajoq2p
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    volumes:
      - ./logs:/app/logs
      - sportmonks_data:/app/data
    networks:
      - real_madrid_network
    restart: "no"
    profiles:
      - collector
    healthcheck:
      test: ["CMD", "/app/health_check.sh"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3

  # ============================================================================
  # Match Report Generator Service
  # ============================================================================
  match_generator:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: real_madrid_match_generator
    depends_on:
      postgres:
        condition: service_healthy
      sportmonks_collector:
        condition: service_completed_successfully
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=soccer_intelligence
      - POSTGRES_USER=soccerapp
      - POSTGRES_PASSWORD=soccerpass123
      - PYTHONPATH=/app
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
      - ./scripts:/app/scripts
    networks:
      - real_madrid_network
    restart: "no"
    profiles:
      - generator
    command: python scripts/analysis/comprehensive_match_generator.py

  # ============================================================================
  # Premium Statistics Display Service
  # ============================================================================
  premium_display:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: real_madrid_premium_display
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=soccer_intelligence
      - POSTGRES_USER=soccerapp
      - POSTGRES_PASSWORD=soccerpass123
      - PYTHONPATH=/app
    volumes:
      - ./scripts:/app/scripts
      - ./config:/app/config
    networks:
      - real_madrid_network
    restart: "no"
    profiles:
      - display
    command: python scripts/analysis/premium_real_madrid_display.py

  # ============================================================================
  # Redis for High-Performance Caching and Data Management
  # ============================================================================
  redis:
    image: redis:7-alpine
    container_name: real_madrid_cache
    environment:
      - REDIS_PASSWORD=redispass123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - redis_logs:/var/log/redis
    networks:
      - real_madrid_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    command: >
      redis-server
      --appendonly yes
      --requirepass redispass123
      --maxmemory 1536mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
      --tcp-keepalive 300
      --timeout 0
      --tcp-backlog 511
      --databases 16
      --stop-writes-on-bgsave-error no
      --rdbcompression yes
      --rdbchecksum yes
      --dir /data
      --logfile /var/log/redis/redis.log
      --loglevel notice
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "redispass123", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  postgres_logs:
    driver: local
  jupyter_data:
    driver: local
  redis_data:
    driver: local
  redis_logs:
    driver: local
  match_reports:
    driver: local
  sportmonks_data:
    driver: local

networks:
  real_madrid_network:
    driver: bridge
