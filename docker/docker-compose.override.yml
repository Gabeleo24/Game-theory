# Docker Compose Override for Development Environment
# This file provides development-specific configurations

version: '3.8'

services:
  # ============================================================================
  # Development Overrides for Main Application
  # ============================================================================
  soccer-intelligence:
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      - DEBUG=true
    volumes:
      # Mount source code for live development
      - .:/app:cached
      # Override with development config
      - ./config/config_template.yaml:/app/config/config.yaml:ro
    command: ["bash"]
    stdin_open: true
    tty: true

  # ============================================================================
  # Development Database with Exposed Ports
  # ============================================================================
  postgres:
    environment:
      - POSTGRES_DB=soccer_intelligence_dev
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devpass123
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    volumes:
      # Add development-specific init scripts
      - ./docker/postgres/dev-init.sql:/docker-entrypoint-initdb.d/dev-init.sql:ro

  # ============================================================================
  # Development Redis with Exposed Management
  # ============================================================================
  redis:
    command: redis-server --appendonly yes --requirepass devredis123
    ports:
      - "6380:6379"  # Different port to avoid conflicts

  # ============================================================================
  # Additional Development Services
  # ============================================================================
  
  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: soccer-intelligence-pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@soccerapp.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "8080:80"
    networks:
      - soccer-intelligence-network
    depends_on:
      - postgres
    profiles:
      - development

  # Redis Commander for cache management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: soccer-intelligence-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379:0:devredis123
    ports:
      - "8081:8081"
    networks:
      - soccer-intelligence-network
    depends_on:
      - redis
    profiles:
      - development

  # Jupyter Lab for interactive development
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: soccer-intelligence-jupyter
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app/src
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=soccer-intelligence-dev
    volumes:
      - .:/app:cached
      - jupyter_data:/home/soccerapp/.jupyter
    ports:
      - "8888:8888"
    networks:
      - soccer-intelligence-network
    command: ["jupyter", "lab", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root", "--NotebookApp.token=soccer-intelligence-dev"]
    profiles:
      - development

  # Streamlit dashboard for data visualization
  streamlit-dashboard:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: soccer-intelligence-streamlit
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app/src
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
    volumes:
      - .:/app:cached
    ports:
      - "8501:8501"
    networks:
      - soccer-intelligence-network
    command: ["streamlit", "run", "scripts/dashboard/streamlit_app.py", "--server.address=0.0.0.0", "--server.port=8501"]
    profiles:
      - development

  # FastAPI service for REST API
  fastapi-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: soccer-intelligence-api
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app/src
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
    volumes:
      - .:/app:cached
    ports:
      - "8000:8000"
    networks:
      - soccer-intelligence-network
    command: ["uvicorn", "scripts.api.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    profiles:
      - development

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: soccer-intelligence-prometheus
    restart: unless-stopped
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - soccer-intelligence-network
    profiles:
      - monitoring

  # Grafana for metrics visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: soccer-intelligence-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "3000:3000"
    networks:
      - soccer-intelligence-network
    depends_on:
      - prometheus
    profiles:
      - monitoring

# ============================================================================
# Additional Volumes for Development
# ============================================================================
volumes:
  pgadmin_data:
    driver: local
    name: soccer-intelligence-pgadmin-data
  jupyter_data:
    driver: local
    name: soccer-intelligence-jupyter-data
  prometheus_data:
    driver: local
    name: soccer-intelligence-prometheus-data
  grafana_data:
    driver: local
    name: soccer-intelligence-grafana-data
